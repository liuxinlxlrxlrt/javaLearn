package class3;

/*
 *   位运算符：
 *      &,|,^,~
 *      <<,>>,>>>
 *   注意：
 *    要做位运算，首先要把数据转换为二进制       
 */

public class OperatorDemo8 {
	public static void main(String[] args) {
		//&,|,^,~(当他两边是数据，做的位运算，当他两边是boolean类型，做的是逻辑运算)
		
		int a = 3;
		int b = 4;
       
		System.out.println(3 & 4);
		System.out.println(3 | 4);
		System.out.println(3 ^ 4);
		System.out.println(~3);
	}
}
/*
 *   分析：因为是位运算，所以他们必须 先把数据换算成二进制
 *   
 *   3的二进制：11
 *       00000000 00000000 00000000 00000011
 *       
 *   4的二进制：100
 *       00000000 00000000 00000000 00000100
 *       
 *   &位与运算，有0则0
 *       00000000 00000000 00000000 00000011
 *     & 00000000 00000000 00000000 00000100
 *     -------------------------------------------
 *       00000000 00000000 00000000 00000000
 *       结果是0
 *       
 *    |位或运算，有1则1
 *       00000000 00000000 00000000 00000011
 *     & 00000000 00000000 00000000 00000100
 *     -------------------------------------------
 *       00000000 00000000 00000000 00000111
 *       结果是7
 *       
 *      ^位异或运算：相同则为0，不同则为1
 *       00000000 00000000 00000000 00000011
 *     & 00000000 00000000 00000000 00000100
 *     -------------------------------------------
 *       00000000 00000000 00000000 00000111
 *       结果是7 
 *       
 *     ~按位取反运算符：0变1,1变0
 *       00000000 00000000 00000000 00000011
 *      ~11111111 11111111 11111111 11111100(补码)(为什么计算后是补码？计算机二进制是按补码的计算的)
 *      
 *      补码：11111111 11111111 11111111 11111100
 *      反码：11111111 11111111 11111111 11111011
 *      原码：10000000 00000000 00000000 00000100
 *      结果是-4
 */
