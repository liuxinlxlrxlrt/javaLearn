public static String toString(int[] a)
public static void sort(int[] a)：底层是快速排序，知道到就可以了，有空看
public static int binarySearch(int[] a,int key)

开发原则：
	只要是对象，我们就要判断该对象为null
	
public static String toString(int[] a)原码：

int[] arr = {24,69,80,57,13};
System.out.println("排序前："+Arrays.toString(arr));

public static String toString(int[] a) {
		//a--arr--{24,69,80,57,13}
		
        if (a == null)
            return "null";//说明数组对象不存在
        int iMax = a.length - 1; //iMax=5-1=4
        if (iMax == -1)
            return "[]";//说明数组存在，但是没有元素

        StringBuilder b = new StringBuilder();
        b.append('[');//"["
        for (int i = 0; ; i++) {
            b.append(a[i]);//"[24,69,80,57,13"
            if (i == iMax) //1=0,iMax=4
            	//"[24,69,80,57,13]"
                return b.append(']').toString();
            b.append(", ");"[24,24,69,80,57,"
        }
    }
------------------------------------------------
public static int binarySearch(int[] a,int key)原码：

int[] arr = {13,24,57,69,80};
System.out.println("binarySearch："+Arrays.binarySearch(arr, 577));

public static int binarySearch(int[] a, int key) {
	//a--arr-{13,24,57,69,80},key--577
   return binarySearch0(a, 0, a.length, key);
}

private static int binarySearch0(int[] a, int fromIndex, int toIndex,
                                     int key) {
        //a--arr-{13,24,57,69,80} 
        //fromIndex--0 
        //toIndex--5
        //key--577   
        
        int low = fromIndex;//low=0
        int high = toIndex - 1;//high=4

        while (low <= high) {
        	//无符号右移一位，相当于/2，mid=2
            int mid = (low + high) >>> 1;
            int midVal = a[mid]; //midVal=a[2]=57

            if (midVal < key)//57<577
                low = mid + 1;//low=2+1=3
            else if (midVal > key)
                high = mid - 1;
            else
                return mid; // key found
        }
        return -(low + 1);  // key not found.
    }

    
    